const express= require('express');
const app = express();
const bodyParser = require('body-parser')
app.use(bodyParser.urlencoded({extended:true}))
app.set('view engine','ejs')
const MongoClient = require('mongodb').MongoClient
//수정하기
const methodOverride = require('method-override')
app.use(methodOverride('_method'))

app.get('/',function(req,res){
  res.render('index.ejs')
})

MongoClient.connect('mongodb+srv://sai:sai@cluster0.fivip1p.mongodb.net/?retryWrites=true&w=majority',function(err,client){
  if(err)return console.log(err);
  db = client.db('todoapp');
  app.listen(8181,function(){
    console.log('listening on 8181 로연결된다')
  });
})

app.get('/write',function(req,res){
  res.render('write.ejs')
})


app.post('/add',function(req,res){
  res.send('전송완료')
  db.collection('counter').findOne({name:'게시물갯수'},function(err,result){
    console.log(result.totalPost);
    var 총게시물갯수 = result.totalPost;
    db.collection('post').insertOne({_id:총게시물갯수 +1,제목:req.body.title,날짜:req.body.date},function(err,result){
      console.log('저장완료')
      //counter라는 collection에 있는 totalPost도 게시물이 추가될때마다 1씩 증가해주세요 
      db.collection('counter').updateOne({name:'게시물갯수'},{$inc:{totalPost:1}},function(err,result){
        if(err){return console.log(err)} //에러찾기
      })
    })
  })
})



app.post('/add',function(req,res){
  res.send('sucees');
  db,collection('counter').findOne({name:'게시판겟수'},function(err,result){
    var totalPost = result.totalPost
    db.collection('post').insertOne({_id:totalpost+1,제목:req.body.title,날짜:req.body.data},function(err,result){
      db.collection('counter').updateOne({name:'게시판겟수'},{$inc:{totalPost:1}})
    })
  })
})


app.delete('/delete',function(req,res){
  req.body._id = parseInt(req.body._id)
  db.collection('post').deleteOne(req.body,function(err,result){
    res.status(200).send({message:'성공'})
  })
})

app.get('/list',function(req,res){
  db.collection('post').find().toArray(function(err,result){
    res.render('list.ejs',{list:result})
  })
})


app.get('/edit/:id',function(req,res){
  db.collection('post').findOne({_id:parseInt(req.params.id)},function(err,result){
    if(result==null){
      res.render('faill.ejs')
    }else{
      res.render('edit.ejs',{edit:result})
    }
  })
})





//수정하기 PUT
app.put('/edit',function(req,res){
  //폼에담긴 제목데이터,날짜데이터를 가지고 db.collection에다가 업데이트 해준다.

  db.collection('post').updateOne({_id:parseInt(req.body.id)},{$set:{제목:req.body.title}},function(err,result){
res.redirect('list')
  })
})
